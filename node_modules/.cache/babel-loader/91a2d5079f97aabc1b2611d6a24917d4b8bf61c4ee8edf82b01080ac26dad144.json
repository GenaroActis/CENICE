{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\educa informatica\\\\Documents\\\\GitHub\\\\ceni0-reactjs\\\\src\\\\context\\\\CartContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext([]);\nconst CartProvider = props => {\n  _s();\n  const [productosElegidos, setProductosElegidos] = useState([]);\n\n  // const itemEnCarrito = productosElegidos.find((prod) =>{\n  //     return prod.id == product.id\n  // });\n\n  const agregarProducto = () => {\n    setProductosElegidos(productosElegidos.map(product => {\n      if (itemEnCarrito) {\n        let itemParaActualizar = itemEnCarrito;\n        let precioParaActualizar = itemParaActualizar.precio;\n        itemParaActualizar.elegidos = itemParaActualizar.elegidos + 1;\n        itemParaActualizar.precioSubTotal = itemParaActualizar.elegidos * precioParaActualizar;\n      }\n      // si el elemento no existe ya en el array productosElegidos que....\n      else {\n        productosElegidos.push({\n          id: product.id,\n          nombre: product.nombre,\n          precio: product.precio,\n          img1: product.img1,\n          img2: product.img2,\n          precioSubTotal: product.precioSubTotal,\n          elegidos: 1\n        });\n      }\n      ;\n    }));\n  };\n  const limpiarCarrito = () => {\n    setProductosElegidos = [];\n    window.sessionStorage.clear();\n  };\n  const eliminarItem = () => {\n    let itemParaActualizar = itemEnCarrito;\n    if (itemParaActualizar.elegidos < 2) {\n      const prodId = id;\n      productosElegidos = productosElegidos.filter(product => product.id !== prodId);\n      itemParaActualizar.elegidos = 0;\n    } else {\n      itemParaActualizar.elegidos = itemParaActualizar.elegidos - 1;\n      let precioParaActualizar = itemParaActualizar.precio;\n      itemParaActualizar.precioSubTotal = itemParaActualizar.elegidos * precioParaActualizar;\n    }\n    ;\n  };\n  const totalPrecio = () => {\n    const totalPrecio = productosElegidos.reduce((acumulador, product) => acumulador + product.precioSubTotal, 0);\n  };\n  const totalCantidad = () => {\n    const totalPrecio = productosElegidos.reduce((acumulador, product) => acumulador + product.elegidos, 0);\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      limpiarCarrito,\n      itemEnCarrito,\n      eliminarItem,\n      totalPrecio,\n      totalCantidad,\n      agregarProducto\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(CartProvider, \"qyuX8ryJZDvohXqyeVR+6MsaxOg=\");\n_c = CartProvider;\nexport { CartProvider };\nexport default CartContext;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","CartContext","CartProvider","props","productosElegidos","setProductosElegidos","agregarProducto","map","product","itemEnCarrito","itemParaActualizar","precioParaActualizar","precio","elegidos","precioSubTotal","push","id","nombre","img1","img2","limpiarCarrito","window","sessionStorage","clear","eliminarItem","prodId","filter","totalPrecio","reduce","acumulador","totalCantidad","children"],"sources":["C:/Users/educa informatica/Documents/GitHub/ceni0-reactjs/src/context/CartContext.jsx"],"sourcesContent":["import React, { createContext, useState } from 'react'\r\n\r\nconst CartContext = createContext([]);\r\n\r\nconst CartProvider = (props) =>{\r\n\r\n    const [productosElegidos, setProductosElegidos] = useState([])\r\n\r\n\r\n\r\n    // const itemEnCarrito = productosElegidos.find((prod) =>{\r\n    //     return prod.id == product.id\r\n    // });\r\n\r\n    const agregarProducto = () => {\r\n        setProductosElegidos(productosElegidos.map(product =>{\r\n            if (itemEnCarrito){\r\n                let itemParaActualizar = itemEnCarrito\r\n                let precioParaActualizar = itemParaActualizar.precio;\r\n                itemParaActualizar.elegidos = itemParaActualizar.elegidos + 1;\r\n                itemParaActualizar.precioSubTotal = itemParaActualizar.elegidos * precioParaActualizar;\r\n            }\r\n        // si el elemento no existe ya en el array productosElegidos que....\r\n            else{\r\n                productosElegidos.push({\r\n                    id : product.id,\r\n                    nombre : product.nombre,\r\n                    precio : product.precio,\r\n                    img1 : product.img1,\r\n                    img2 : product.img2,\r\n                    precioSubTotal : product.precioSubTotal,\r\n                    elegidos : 1,\r\n                    });\r\n                };\r\n        }))\r\n    };\r\n\r\n    const limpiarCarrito = () => {\r\n        setProductosElegidos= [];\r\n        window.sessionStorage.clear();\r\n    };\r\n\r\n    const eliminarItem = () => {\r\n        let itemParaActualizar = itemEnCarrito\r\n        if (itemParaActualizar.elegidos < 2 ){\r\n            const prodId = id\r\n            productosElegidos = productosElegidos.filter((product) => product.id !== prodId);\r\n            itemParaActualizar.elegidos = 0;\r\n        }\r\n        else {\r\n            itemParaActualizar.elegidos = itemParaActualizar.elegidos - 1;\r\n            let precioParaActualizar = itemParaActualizar.precio;\r\n            itemParaActualizar.precioSubTotal = itemParaActualizar.elegidos * precioParaActualizar;\r\n        };\r\n    };\r\n\r\n    const totalPrecio = () => {\r\n        const totalPrecio = productosElegidos.reduce((acumulador, product) => acumulador + product.precioSubTotal, 0);\r\n    };\r\n\r\n    const totalCantidad = () => {\r\n        const totalPrecio = productosElegidos.reduce((acumulador, product) => acumulador + product.elegidos, 0);\r\n    };\r\n\r\n    return(\r\n        <CartContext.Provider value={{ limpiarCarrito, itemEnCarrito,  eliminarItem, totalPrecio, totalCantidad, agregarProducto}}>\r\n        {props.children}\r\n        </CartContext.Provider>\r\n    )\r\n}\r\n\r\nexport {CartProvider}\r\nexport default CartContext;       "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAA;AAEtD,MAAMC,WAAW,gBAAGF,aAAa,CAAC,EAAE,CAAC;AAErC,MAAMG,YAAY,GAAIC,KAAK,IAAI;EAAA;EAE3B,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;;EAI9D;EACA;EACA;;EAEA,MAAMM,eAAe,GAAG,MAAM;IAC1BD,oBAAoB,CAACD,iBAAiB,CAACG,GAAG,CAACC,OAAO,IAAG;MACjD,IAAIC,aAAa,EAAC;QACd,IAAIC,kBAAkB,GAAGD,aAAa;QACtC,IAAIE,oBAAoB,GAAGD,kBAAkB,CAACE,MAAM;QACpDF,kBAAkB,CAACG,QAAQ,GAAGH,kBAAkB,CAACG,QAAQ,GAAG,CAAC;QAC7DH,kBAAkB,CAACI,cAAc,GAAGJ,kBAAkB,CAACG,QAAQ,GAAGF,oBAAoB;MAC1F;MACJ;MAAA,KACQ;QACAP,iBAAiB,CAACW,IAAI,CAAC;UACnBC,EAAE,EAAGR,OAAO,CAACQ,EAAE;UACfC,MAAM,EAAGT,OAAO,CAACS,MAAM;UACvBL,MAAM,EAAGJ,OAAO,CAACI,MAAM;UACvBM,IAAI,EAAGV,OAAO,CAACU,IAAI;UACnBC,IAAI,EAAGX,OAAO,CAACW,IAAI;UACnBL,cAAc,EAAGN,OAAO,CAACM,cAAc;UACvCD,QAAQ,EAAG;QACX,CAAC,CAAC;MACN;MAAC;IACT,CAAC,CAAC,CAAC;EACP,CAAC;EAED,MAAMO,cAAc,GAAG,MAAM;IACzBf,oBAAoB,GAAE,EAAE;IACxBgB,MAAM,CAACC,cAAc,CAACC,KAAK,EAAE;EACjC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAM;IACvB,IAAId,kBAAkB,GAAGD,aAAa;IACtC,IAAIC,kBAAkB,CAACG,QAAQ,GAAG,CAAC,EAAE;MACjC,MAAMY,MAAM,GAAGT,EAAE;MACjBZ,iBAAiB,GAAGA,iBAAiB,CAACsB,MAAM,CAAElB,OAAO,IAAKA,OAAO,CAACQ,EAAE,KAAKS,MAAM,CAAC;MAChFf,kBAAkB,CAACG,QAAQ,GAAG,CAAC;IACnC,CAAC,MACI;MACDH,kBAAkB,CAACG,QAAQ,GAAGH,kBAAkB,CAACG,QAAQ,GAAG,CAAC;MAC7D,IAAIF,oBAAoB,GAAGD,kBAAkB,CAACE,MAAM;MACpDF,kBAAkB,CAACI,cAAc,GAAGJ,kBAAkB,CAACG,QAAQ,GAAGF,oBAAoB;IAC1F;IAAC;EACL,CAAC;EAED,MAAMgB,WAAW,GAAG,MAAM;IACtB,MAAMA,WAAW,GAAGvB,iBAAiB,CAACwB,MAAM,CAAC,CAACC,UAAU,EAAErB,OAAO,KAAKqB,UAAU,GAAGrB,OAAO,CAACM,cAAc,EAAE,CAAC,CAAC;EACjH,CAAC;EAED,MAAMgB,aAAa,GAAG,MAAM;IACxB,MAAMH,WAAW,GAAGvB,iBAAiB,CAACwB,MAAM,CAAC,CAACC,UAAU,EAAErB,OAAO,KAAKqB,UAAU,GAAGrB,OAAO,CAACK,QAAQ,EAAE,CAAC,CAAC;EAC3G,CAAC;EAED,oBACI,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAE;MAAEO,cAAc;MAAEX,aAAa;MAAGe,YAAY;MAAEG,WAAW;MAAEG,aAAa;MAAExB;IAAe,CAAE;IAAA,UACzHH,KAAK,CAAC4B;EAAQ;IAAA;IAAA;IAAA;EAAA,QACQ;AAE/B,CAAC;AAAA,GAjEK7B,YAAY;AAAA,KAAZA,YAAY;AAmElB,SAAQA,YAAY;AACpB,eAAeD,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}