{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\educa informatica\\\\Documents\\\\GitHub\\\\ceni0-reactjs\\\\src\\\\Components\\\\pages\\\\ProductoDetalles.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Carousel from 'react-bootstrap/Carousel';\nimport Card from 'react-bootstrap/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst productosElegidos = [];\nconst Producto = () => {\n  _s();\n  const [cardsProducts, setCardsProducts] = useState([]);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    fetch('https://res.cloudinary.com/dsdicaf5h/raw/upload/v1677544978/cenicero/productos_ugha4n.json').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(dataJson => setCardsProducts(dataJson.results)).catch(error => console.log('Error fetching data: ', error));\n  }, []);\n  const productoFiltrado = cardsProducts.filter(product => String(product.id) === id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"detalleProducto\",\n    children: [productoFiltrado.map(product => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"carousel\",\n        children: /*#__PURE__*/_jsxDEV(Carousel, {\n          variant: \"dark\",\n          children: [/*#__PURE__*/_jsxDEV(Carousel.Item, {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"d-block w-100\",\n              src: product.img1,\n              alt: \"First slide\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Carousel.Item, {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"d-block w-100\",\n              src: product.img2,\n              alt: \"Second slide\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: product.nombre\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n              className: \"mb-2 text-muted\",\n              children: [\"Talle \", product.talle]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"$\", product.precio, product.medidas]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                // generamos la funcion de agregar producto\n                const agregarProducto = id => {\n                  const productoEnCarrito = productosElegidos.find(prod => {\n                    return prod.id == product.id;\n                  });\n                  ;\n\n                  // si ya existe actualizamos cantidadElegida\n                  if (productoEnCarrito) {\n                    let productoParaActualizar = productosElegidos.find(prod => {\n                      return prod.id == product.id;\n                    });\n                    let precioParaActualizar = productoParaActualizar.precio;\n                    productoParaActualizar.elegidos = productoParaActualizar.elegidos + 1;\n                    productoParaActualizar.precioSubTotal = productoParaActualizar.elegidos * precioParaActualizar;\n                    console.log(productosElegidos);\n                    console.log(productoParaActualizar);\n                  }\n                  // si el elemento no existe ya en el array productosElegidos que....\n                  else {\n                    productosElegidos.push({\n                      id: product.id,\n                      nombre: product.nombre,\n                      precio: product.precio,\n                      img1: product.img1,\n                      img2: product.img2,\n                      precioSubTotal: product.precioSubTotal,\n                      elegidos: 1,\n                      medidas: product.medidas\n                    });\n                    console.log(\"click\");\n                    console.log(productosElegidos);\n                  }\n                  ;\n                };\n                agregarProducto();\n              },\n              className: \"btn btn-outline-primary\",\n              children: \"agregar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, product.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this)), \";\"]\n  }, id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(Producto, \"ccZUcOjV1LzaxB0zucLiZYYg5v4=\", false, function () {\n  return [useParams];\n});\n_c = Producto;\nexport default Producto;\nvar _c;\n$RefreshReg$(_c, \"Producto\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Carousel","Card","productosElegidos","Producto","cardsProducts","setCardsProducts","id","fetch","then","response","ok","Error","json","dataJson","results","catch","error","console","log","productoFiltrado","filter","product","String","map","img1","img2","nombre","talle","precio","medidas","agregarProducto","productoEnCarrito","find","prod","productoParaActualizar","precioParaActualizar","elegidos","precioSubTotal","push"],"sources":["C:/Users/educa informatica/Documents/GitHub/ceni0-reactjs/src/Components/pages/ProductoDetalles.jsx"],"sourcesContent":["import React, { useState, useEffect} from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport Carousel from 'react-bootstrap/Carousel';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nconst productosElegidos = [];\r\n\r\nconst  Producto = () => {\r\n\r\n    const [cardsProducts, setCardsProducts] = useState([])\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        \r\n        fetch('https://res.cloudinary.com/dsdicaf5h/raw/upload/v1677544978/cenicero/productos_ugha4n.json')\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(dataJson => setCardsProducts(dataJson.results))\r\n        .catch(error => console.log('Error fetching data: ', error));\r\n    }, []);\r\n\r\n    const productoFiltrado = cardsProducts.filter(product => String(product.id) === id )\r\n\r\n    return (\r\n        <div key={id} id='detalleProducto'>\r\n            {\r\n            productoFiltrado.map(product =>(\r\n                <React.Fragment key={product.id}>\r\n                <div key={id} id='carousel'>\r\n                    <Carousel variant=\"dark\">\r\n                        <Carousel.Item>\r\n                            <img\r\n                            className=\"d-block w-100\"\r\n                            src={product.img1}\r\n                            alt=\"First slide\"\r\n                            />\r\n                        </Carousel.Item>\r\n                        <Carousel.Item>\r\n                            <img\r\n                            className=\"d-block w-100\"\r\n                            src={product.img2}\r\n                            alt=\"Second slide\"\r\n                            />\r\n                        </Carousel.Item>\r\n                    </Carousel>\r\n                </div>\r\n                <div>\r\n                <Card>\r\n                    <Card.Body>\r\n                        <Card.Title>{product.nombre}</Card.Title>\r\n                        <Card.Subtitle className=\"mb-2 text-muted\">Talle {product.talle}</Card.Subtitle>\r\n                        <Card.Text>\r\n                        ${product.precio}\r\n                        {product.medidas}\r\n                        </Card.Text>\r\n                        <button onClick={()=>{\r\n                            // generamos la funcion de agregar producto\r\n                            const agregarProducto = (id) =>{\r\n                                const productoEnCarrito = productosElegidos.find((prod) =>{\r\n                                    return prod.id == product.id\r\n                                });;\r\n                                \r\n                                // si ya existe actualizamos cantidadElegida\r\n                                if (productoEnCarrito){\r\n                                        let productoParaActualizar = productosElegidos.find((prod) =>{\r\n                                        return prod.id == product.id\r\n                                    });\r\n                                        let precioParaActualizar = productoParaActualizar.precio;\r\n                                        productoParaActualizar.elegidos = productoParaActualizar.elegidos + 1;\r\n                                        productoParaActualizar.precioSubTotal = productoParaActualizar.elegidos * precioParaActualizar;\r\n                                        console.log(productosElegidos);\r\n                                        console.log(productoParaActualizar);\r\n                                }\r\n                                // si el elemento no existe ya en el array productosElegidos que....\r\n                                else{\r\n                                    productosElegidos.push({\r\n                                        id : product.id,\r\n                                        nombre : product.nombre,\r\n                                        precio : product.precio,\r\n                                        img1 : product.img1,\r\n                                        img2 : product.img2,\r\n                                        precioSubTotal : product.precioSubTotal,\r\n                                        elegidos : 1,\r\n                                        medidas : product.medidas\r\n                                        });\r\n                                        console.log(\"click\")\r\n                                        console.log(productosElegidos);\r\n                                };\r\n                            };\r\n                            agregarProducto(); \r\n                        }} className='btn btn-outline-primary'>agregar</button>\r\n                    </Card.Body>\r\n                </Card>\r\n                </div>\r\n                </React.Fragment>\r\n            ))\r\n            };\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Producto"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}