{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\educa informatica\\\\Documents\\\\GitHub\\\\ceni0-reactjs\\\\src\\\\context\\\\CartContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nconst CartProvider = props => {\n  _s();\n  const [productosElegidos, setProductosElegidos] = useState([]);\n  const agregarProducto = producto => {\n    const itemParaActualizar = itemEnCarrito(producto.id);\n    // si el elemento si existe actualizamos cantidad elegida y precio subtotal\n    if (itemParaActualizar) {\n      let precioParaActualizar = itemParaActualizar.precio;\n      itemParaActualizar.elegidos = itemParaActualizar.elegidos + 1;\n      itemParaActualizar.precioSubTotal = itemParaActualizar.elegidos * precioParaActualizar;\n      setProductosElegidos([...productosElegidos]);\n    }\n    // si el elemento no existe ya en el array productosElegidos que....\n    else {\n      const nuevoProducto = {\n        id: producto.id,\n        nombre: producto.nombre,\n        precio: producto.precio,\n        img1: producto.img1,\n        img2: producto.img2,\n        precioSubTotal: producto.precio,\n        elegidos: 1\n      };\n      setProductosElegidos([...productosElegidos, nuevoProducto]);\n    }\n  };\n  const limpiarCarrito = () => {\n    setProductosElegidos = [];\n    window.sessionStorage.clear();\n  };\n  const eliminarItem = id => {\n    let itemParaActualizar = itemEnCarrito;\n    // si la cantidad es menos a dos limpiamos el producto\n    if (itemParaActualizar.elegidos < 2) {\n      const prodId = id;\n      productosElegidos = productosElegidos.filter(product => product.id !== prodId);\n      itemParaActualizar.elegidos = 0;\n    }\n    // sino descontamos uno a cantidad elegida\n    else {\n      itemParaActualizar.elegidos = itemParaActualizar.elegidos - 1;\n      let precioParaActualizar = itemParaActualizar.precio;\n      itemParaActualizar.precioSubTotal = itemParaActualizar.elegidos * precioParaActualizar;\n    }\n    ;\n  };\n  const totalPrecio = () => {\n    const totalPrecio = productosElegidos.reduce((acumulador, product) => acumulador + product.precioSubTotal, 0);\n  };\n  const totalCantidad = () => {\n    const totalPrecio = productosElegidos.reduce((acumulador, product) => acumulador + product.elegidos, 0);\n  };\n  const localStorage = () => {\n    // convertimos los objetos en json\n    const JsonProductos = JSON.stringify(productosElegidos);\n    // almacenamos en localStorage\n    window.localStorage.setItem(\"productosElegidos\", JsonProductos);\n    window.dispatchEvent(new Event('storage'));\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      productosElegidos,\n      limpiarCarrito,\n      itemEnCarrito,\n      eliminarItem,\n      totalPrecio,\n      totalCantidad,\n      agregarProducto,\n      localStorage\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s(CartProvider, \"qyuX8ryJZDvohXqyeVR+6MsaxOg=\");\n_c = CartProvider;\nexport { CartProvider };\nexport default CartContext;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","CartContext","CartProvider","props","productosElegidos","setProductosElegidos","agregarProducto","producto","itemParaActualizar","itemEnCarrito","id","precioParaActualizar","precio","elegidos","precioSubTotal","nuevoProducto","nombre","img1","img2","limpiarCarrito","window","sessionStorage","clear","eliminarItem","prodId","filter","product","totalPrecio","reduce","acumulador","totalCantidad","localStorage","JsonProductos","JSON","stringify","setItem","dispatchEvent","Event","children"],"sources":["C:/Users/educa informatica/Documents/GitHub/ceni0-reactjs/src/context/CartContext.jsx"],"sourcesContent":["import React, { createContext, useState } from 'react'\r\n\r\nconst CartContext = createContext();\r\n\r\nconst CartProvider = (props) =>{\r\n\r\n    const [productosElegidos, setProductosElegidos] = useState([])\r\n\r\n\r\n    const agregarProducto = (producto) => {\r\n        const itemParaActualizar = itemEnCarrito(producto.id);\r\n        // si el elemento si existe actualizamos cantidad elegida y precio subtotal\r\n        if (itemParaActualizar){\r\n            let precioParaActualizar = itemParaActualizar.precio;\r\n            itemParaActualizar.elegidos = itemParaActualizar.elegidos + 1;\r\n            itemParaActualizar.precioSubTotal = itemParaActualizar.elegidos * precioParaActualizar;\r\n            setProductosElegidos([...productosElegidos]);\r\n        }\r\n        // si el elemento no existe ya en el array productosElegidos que....\r\n        else{\r\n            const nuevoProducto = {\r\n                id : producto.id,\r\n                nombre : producto.nombre,\r\n                precio : producto.precio,\r\n                img1 : producto.img1,\r\n                img2 : producto.img2,\r\n                precioSubTotal : producto.precio,\r\n                elegidos : 1,\r\n            };\r\n            setProductosElegidos([...productosElegidos, nuevoProducto]);\r\n        }\r\n    };\r\n\r\n    const limpiarCarrito = () => {\r\n        setProductosElegidos= [];\r\n        window.sessionStorage.clear();\r\n    };\r\n\r\n    const eliminarItem = (id) => {\r\n        let itemParaActualizar = itemEnCarrito\r\n        // si la cantidad es menos a dos limpiamos el producto\r\n        if (itemParaActualizar.elegidos < 2 ){\r\n            const prodId = id\r\n            productosElegidos = productosElegidos.filter((product) => product.id !== prodId);\r\n            itemParaActualizar.elegidos = 0;\r\n        }\r\n        // sino descontamos uno a cantidad elegida\r\n        else {\r\n            itemParaActualizar.elegidos = itemParaActualizar.elegidos - 1;\r\n            let precioParaActualizar = itemParaActualizar.precio;\r\n            itemParaActualizar.precioSubTotal = itemParaActualizar.elegidos * precioParaActualizar;\r\n        };\r\n    };\r\n\r\n    const totalPrecio = () => {\r\n        const totalPrecio = productosElegidos.reduce((acumulador, product) => acumulador + product.precioSubTotal, 0);\r\n    };\r\n\r\n    const totalCantidad = () => {\r\n        const totalPrecio = productosElegidos.reduce((acumulador, product) => acumulador + product.elegidos, 0);\r\n    };\r\n\r\n    const localStorage = () => {\r\n        // convertimos los objetos en json\r\n        const JsonProductos = JSON.stringify(productosElegidos)\r\n        // almacenamos en localStorage\r\n        window.localStorage.setItem(\"productosElegidos\", JsonProductos)\r\n        window.dispatchEvent(new Event('storage'))\r\n    };\r\n\r\n    return(\r\n        <CartContext.Provider value={{productosElegidos, limpiarCarrito, itemEnCarrito,  eliminarItem, totalPrecio, totalCantidad, agregarProducto, localStorage}}>\r\n        {props.children}\r\n        </CartContext.Provider>\r\n    )\r\n}\r\n\r\n\r\nexport {CartProvider}\r\nexport default CartContext;       "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}